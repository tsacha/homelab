---
version: '3'

tasks:
  local/prereqs:
    cmds:
      - helm repo add cilium https://helm.cilium.io/
      - curl -L http://boot.ipxe.org/snponly.efi -o boot/assets/snponly.efi
      - curl -L https://github.com/siderolabs/talos/releases/download/v1.4.6/vmlinuz-amd64 -o boot/assets/vmlinuz
      - curl -L https://github.com/siderolabs/talos/releases/download/v1.4.6/initramfs-amd64.xz -o boot/assets/initramfs.xz
  boot/web:
    dir: boot/assets
    cmds:
      - caddy file-server --listen "[::]:8080" --access-log
  boot/dhcp:
    cmds:
      - gomplate --experimental -d secrets.yaml -f boot/kea-config/dhcp6.json.template -o boot/kea-config/dhcp6.json
      - sudo kea-dhcp6 -d -c boot/kea-config/dhcp6.json
  boot/tftp:
    dir: boot/assets
    cmds:
      - sudo in.tftpd -6 -L -s .
  # Secrets
  git/encrypt:
    cmds:
      - sops --encrypt secrets.yaml > secrets.yaml.enc
      - sops --input-type yaml --output-type yaml --encrypt talos/data/talosconfig > talos/data/talosconfig.enc
      - sops --encrypt ansible/inventory/gw.yaml > ansible/inventory/gw.yaml.enc
      - sops --encrypt ansible/inventory/proxmox.yaml > ansible/inventory/proxmox.yaml.enc
      - |
        for f in $(ls talos/data/*.yaml); do
          sops --encrypt $f > $f.enc
        done;
      - |
        for f in $(ls talos/data/nodes/*.yaml); do
          sops --encrypt $f > $f.enc
        done;
  git/decrypt:
    cmds:
      - sops --input-type yaml --output-type yaml --decrypt secrets.yaml.enc > secrets.yaml
      - sops --input-type yaml --output-type yaml --decrypt talos/data/talosconfig.enc > talos/data/talosconfig
      - sops --input-type yaml --output-type yaml --decrypt ansible/inventory/gw.yaml.enc > ansible/inventory/gw.yaml
      - sops --input-type yaml --output-type yaml --decrypt ansible/inventory/proxmox.yaml.enc > ansible/inventory/proxmox.yaml
      - |
        for f in $(ls talos/data/*.yaml.enc); do
          echo $f
          sops --input-type yaml --output-type yaml --decrypt $f > ${f%.*}
        done;
      - |
        for f in $(ls talos/data/nodes/*.yaml.enc); do
          sops --input-type yaml --output-type yaml --decrypt $f > ${f%.*}
        done;
  # Gateway things
  gw/dns:
    dir: ansible/
    cmds:
      - ansible-playbook -i inventory/gw.yaml gw.yaml -t dns-restart

  # Talos
  talos/gensecrets:
    cmds:
      - mkdir -p talos/data
      - talosctl gen secrets --force -o talos/data/secrets.yaml
  talos/genconfig:
    vars:
      endpoint:
        sh: yq -r ".kube.endpoint" secrets.yaml
      cluster:
        sh: yq -r ".kube.cluster" secrets.yaml
    cmds:
      - gomplate -d secrets.yaml -f talos/templates/all.patch.template -o talos/data/all.patch.yaml
      - gomplate -d secrets.yaml -f talos/templates/cp.patch.template -o talos/data/cp.patch.yaml
      - gomplate -d secrets.yaml -f talos/templates/bgp.yaml.template -o talos/data/bgp.yaml
      - gomplate -d secrets.yaml -f talos/templates/cilium-options.yaml.template -o talos/data/cilium-options.yaml
      - gomplate --plugin helm=helm -f talos/templates/cilium-inline.patch.template -o talos/data/cilium-inline.yaml
      - talosctl gen config --force --with-secrets talos/data/secrets.yaml {{ .cluster }} https://{{ .endpoint }}:6443 --config-patch @talos/data/all.patch.yaml --config-patch-control-plane=@talos/data/cp.patch.yaml --output-dir talos/data/
      - talosctl --talosconfig talos/data/talosconfig config endpoint {{ .endpoint }}
      - talosctl --talosconfig talos/data/talosconfig config node {{ .endpoint }}
      - mkdir -p talos/data/nodes boot/assets/nodes
  talos/gennodes:
    cmds:
      - |
        for node in $( yq -r ".nodes|to_entries[].key" secrets.yaml ); do
          mkdir -p talos/data/iso/$node
          NODE=$node gomplate -d secrets.yaml -f talos/templates/node.patch.template -o talos/data/$node.patch.yaml
          talosctl machineconfig patch talos/data/controlplane.yaml --patch @talos/data/$node.patch.yaml --patch @talos/data/cilium-inline.yaml --output talos/data/nodes/$node.yaml
          cp talos/data/nodes/$node.yaml boot/assets/nodes/$node.yaml
          NODE=$node gomplate -d secrets.yaml -f boot/assets/ipxe.template -o boot/assets/nodes/$(yq -r ".nodes.$node.mac" secrets.yaml | sed -s "s/:/-/g").pxe
        done;
  talos/install:
    cmds:
      - talosctl --talosconfig talos/data/talosconfig bootstrap
      - talosctl --talosconfig talos/data/talosconfig kubeconfig -f
  talos/postinstall:
    cmds:
      - kubectl apply -f talos/data/bgp.yaml
      - kubectl apply --server-side --kustomize ~/Git/homelab/k8s/bootstrap/flux/
      - cat ~/.age | kubectl create secret generic sops-age --namespace=flux-system --from-file=age.agekey=/dev/stdin || /bin/true
      - sops -d k8s/bootstrap/flux/ssh.yaml | kubectl apply -f -
      - kubectl apply -f k8s/flux/vars/cluster-settings.yaml
      - sops --decrypt k8s/flux/vars/cluster-secrets.sops.yaml | kubectl apply -f -
      - kubectl apply --server-side --kustomize k8s/flux/config
  flux/apply:
    cmds:
      - flux reconcile -n flux-system source git home-tremoureux-fr
      - flux reconcile -n flux-system kustomization cluster
      - flux reconcile -n flux-system kustomization cluster-apps
